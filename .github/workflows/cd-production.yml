name: CD - Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        default: 'latest'
      environment:
        description: 'Environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - production-backup

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/votacao-backend:${{ github.event.inputs.version }}
          ${{ secrets.DOCKER_USERNAME }}/votacao-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/votacao-frontend:${{ github.event.inputs.version }}
          ${{ secrets.DOCKER_USERNAME }}/votacao-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        echo "Version: ${{ github.event.inputs.version }}"
        echo "Environment: ${{ github.event.inputs.environment }}"
        # Add your production deployment logic here
        # Example: kubectl apply, docker-compose, or cloud deployment
        
    - name: Run health checks
      run: |
        echo "Running health checks..."
        # Add health check logic here
        # Example: curl endpoints, database connectivity, etc.
        
    - name: Notify deployment
      if: success()
      run: |
        echo "âœ… Production deployment successful!"
        echo "Version: ${{ github.event.inputs.version }}"
        echo "Backend: ${{ secrets.DOCKER_USERNAME }}/votacao-backend:${{ github.event.inputs.version }}"
        echo "Frontend: ${{ secrets.DOCKER_USERNAME }}/votacao-frontend:${{ github.event.inputs.version }}" 